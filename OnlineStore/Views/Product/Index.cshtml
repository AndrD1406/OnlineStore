@model IEnumerable<OnlineStore.DataAccess.Models.Product>
@using OnlineStore.DataAccess.Models

@{
    ViewData["Title"] = "Products";
    var stores = ViewBag.Stores as IEnumerable<Store>;
    Guid? storeId = ViewBag.storeId as Guid?;
    string? search = ViewBag.product as string;
    double? minSel = ViewBag.min as double?;
    double? maxSel = ViewBag.max as double?;
    double minDb = ViewBag.MinPrice;
    double maxDb = ViewBag.MaxPrice;
}

<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/nouislider@15.7.1/dist/nouislider.min.css">
<script src="https://cdn.jsdelivr.net/npm/nouislider@15.7.1/dist/nouislider.min.js"></script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet" integrity="sha384-…" crossorigin="anonymous">

<div>
<div class="container-fluid mt-4">
    <div class="row">
        <!-- LEFT SIDEBAR -->
        <aside class="col-md-3">
            <form id="filterForm" method="get" asp-action="Index" class="vstack gap-3">

                <!-- Store select -->
                <div>
                    <label class="form-label fw-semibold">Store</label>
                    <select name="storeId" class="form-select">
                        <option value="">All</option>
                        @foreach (var s in stores)
                        {
                            <option value="@s.Id" selected="@(s.Id == storeId)">@s.Name</option>
                        }
                    </select>
                </div>

                <!-- Search -->
                <div>
                    <label class="form-label fw-semibold">Product name</label>
                    <input name="product" value="@search" class="form-control" placeholder="Search…" />
                </div>

                <!-- Price range -->
                <div class="row g-2">
                    <div class="col-6">
                        <label class="form-label fw-semibold">Min price</label>
                        <input type="number" step="0.01" min="0"
                               name="min" value="@minSel"
                               class="form-control" placeholder="From" />
                    </div>

                    <div class="col-6">
                        <label class="form-label fw-semibold">Max price</label>
                        <input type="number" step="0.01" min="0"
                               name="max" value="@maxSel"
                               class="form-control" placeholder="To" />
                    </div>
                </div>


                <button class="btn btn-primary">Apply</button>
            </form>
        </aside>

        <!-- RIGHT CARDS -->
            <main class="col-md-9">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 g-4">
                    @foreach (var product in Model)
                    {
                        <div class="col" style="height: 165px;">
                            <div class="h-100">
                                <partial name="_ProductCard" model="product" />
                            </div>
                        </div>
                    }
                </div>
            </main>

    </div>
</div>
    <div class="paginationWrapper">
        <div class="pagination">
            @for (int i = ViewBag.StartPage; i <= ViewBag.EndPage; i++)
            {
                if (i == ViewBag.CurrentPage)
                {
                   <span>@i</span>
                }
                else
                {
                    <a href="@Url.Action("Index", new { product=search, storeId , min=minSel, max=maxSel, page = i })">@i</a>
                }
            }
        </div>
    </div>
</div>
<style>
    /* clamp description to 2 lines */
    .card-description {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }
</style>

<script>
    // Initialise dual-handle slider
    const slider = document.getElementById('priceSlider');
    const minDb = @minDb.ToString(System.Globalization.CultureInfo.InvariantCulture);
    const maxDb = @maxDb.ToString(System.Globalization.CultureInfo.InvariantCulture);
    const minSel = @(minSel ?? minDb).ToString(System.Globalization.CultureInfo.InvariantCulture);
    const maxSel = @(maxSel ?? maxDb).ToString(System.Globalization.CultureInfo.InvariantCulture);

    noUiSlider.create(slider, {
        start: [minSel, maxSel],
        connect: true,
        step: 0.01,
        range: { 'min': Number(minDb), 'max': Number(maxDb) },
        tooltips: [true, true],
        format: {
            to: v => v.toFixed(2),
            from: v => Number(v)
        }
    });

    const minInput = document.getElementById('minInput');
    const maxInput = document.getElementById('maxInput');
    const minLabel = document.getElementById('minLabel');
    const maxLabel = document.getElementById('maxLabel');

    slider.noUiSlider.on('update', function (values) {
        minInput.value = values[0];
        maxInput.value = values[1];
        minLabel.textContent = `$${values[0]}`;
        maxLabel.textContent = `$${values[1]}`;
    });
</script>
